#include <iostream>
#include "emulator.h"

const unsigned char fontset[80] =
{
	0xF0, 0x90, 0x90, 0x90, 0xF0, //0
	0x20, 0x60, 0x20, 0x20, 0x70, //1
	0xF0, 0x10, 0xF0, 0x80, 0xF0, //2
	0xF0, 0x10, 0xF0, 0x10, 0xF0, //3
	0x90, 0x90, 0xF0, 0x10, 0x10, //4
	0xF0, 0x80, 0xF0, 0x10, 0xF0, //5
	0xF0, 0x80, 0xF0, 0x90, 0xF0, //6
	0xF0, 0x10, 0x20, 0x40, 0x40, //7
	0xF0, 0x90, 0xF0, 0x90, 0xF0, //8
	0xF0, 0x90, 0xF0, 0x10, 0xF0, //9
	0xF0, 0x90, 0xF0, 0x90, 0x90, //A
	0xE0, 0x90, 0xE0, 0x90, 0xE0, //B
	0xF0, 0x80, 0x80, 0x80, 0xF0, //C
	0xE0, 0x90, 0x90, 0x90, 0xE0, //D
	0xF0, 0x80, 0xF0, 0x80, 0xF0, //E
	0xF0, 0x80, 0xF0, 0x80, 0x80  //F
};

Emulator::Emulator() {
}

void Emulator::reset() {
	std::cout << "Resetting emulator state..." << std::endl;

	pc = 0x200;
	opcode = 0;
	I = 0;
	sp = 0;

	delayTimer = 0;
	soundTimer = 0;

	for (int i = 0; i < 2048; ++i)
		videoBuffer[i] = 0;

	for (int i = 0; i < 16; ++i)
		stack[i] = input[i] = V[i] = 0;

	for (int i = 0; i < 4096; ++i)
		rom[i] = 0;

	for (int i = 0; i < 80; ++i)
		rom[i] = fontset[i];
}

void Emulator::cycle() {
	drawFlag = false;

	if (delayTimer > 0) delayTimer--;
	if (soundTimer > 0) soundTimer--;
}

bool Emulator::getDrawFlag() {
	return drawFlag;
}

bool* Emulator::getVideoBuffer() {
	return videoBuffer;
}